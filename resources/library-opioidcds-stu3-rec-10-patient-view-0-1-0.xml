<Library xmlns="http://hl7.org/fhir">
   <id value="library-opioidcds-stu3-rec-10-patient-view-0-1-0"/>
   <meta>
      <versionId value="18"/>
      <lastUpdated value="2019-06-01T18:41:20.220-06:00"/>
   </meta>
   <text>
      <status value="generated"/>
      <div xmlns="http://www.w3.org/1999/xhtml">
         <table class="grid dict">
            <tr>
               <th scope="row">
                  <b>Id: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">Library/library-opioidcds-stu3-rec-10-patient-view-0-1-0/_history/17</td>
            </tr>
            <tr>
               <th scope="row">
                  <b>Type: </b>
               </th>
               <td style="padding-right: 25px;">
                  <span>
                     <br/>
                     <span>
                        <span style="padding-left: 25px;">
                           <b>code: </b>
                           <span>logic-library</span>
                        </span>
                     </span>
                  </span>
               </td>
            </tr>
            <tr>
               <th scope="row">
                  <b>Version: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">0.1.0</td>
            </tr>
            <tr>
               <th scope="row">
                  <b>Status: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">draft</td>
            </tr>
            <tr style="vertical-align: top;">
               <th rowspan="4" scope="row">
                  <b>Related: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">
                  <p style="margin-bottom: 5px;">
                     <b>type: </b>
                     <span>depends-on</span>
                  </p>
                  <p style="margin-bottom: 5px;">
                     <b>Resource: </b>
                     <br/>
                     <span>
                        <span style="padding-left: 25px;">
                           <b>reference: </b>
                           <span>Library/library-fhirhelpers-3-0-0/_history/2</span>
                        </span>
                     </span>
                  </p>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <p style="margin-bottom: 5px;">
                     <b>type: </b>
                     <span>depends-on</span>
                  </p>
                  <p style="margin-bottom: 5px;">
                     <b>Resource: </b>
                     <br/>
                     <span>
                        <span style="padding-left: 25px;">
                           <b>reference: </b>
                           <span>Library/library-opioidcds-stu3-common-0-1-0/_history/314</span>
                        </span>
                     </span>
                  </p>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <p style="margin-bottom: 5px;">
                     <b>type: </b>
                     <span>depends-on</span>
                  </p>
                  <p style="margin-bottom: 5px;">
                     <b>url: </b>
                     <span>urn:hl7-org:elm-types:r1</span>
                  </p>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <p style="margin-bottom: 5px;">
                     <b>type: </b>
                     <span>depends-on</span>
                  </p>
                  <p style="margin-bottom: 5px;">
                     <b>url: </b>
                     <span>http://hl7.org/fhir|3.0.0</span>
                  </p>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <th rowspan="4" scope="row">
                  <b>Data Requirements: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">
                  <div>
                     <p style="margin-bottom: 5px;">
                        <b>type: </b>
                        <span>Observation</span>
                     </p>
                     <p style="margin-bottom: 5px;">
                        <b>code filter:</b>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>path: </b>
                           <span>code</span>
                        </span>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>valueset: </b>
                           <span>Illicit Drug Screening</span>
                        </span>
                     </p>
                  </div>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <div>
                     <p style="margin-bottom: 5px;">
                        <b>type: </b>
                        <span>Observation</span>
                     </p>
                     <p style="margin-bottom: 5px;">
                        <b>code filter:</b>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>path: </b>
                           <span>component-code</span>
                        </span>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>valueset: </b>
                           <span>Illicit Drug Screening</span>
                        </span>
                     </p>
                  </div>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <div>
                     <p style="margin-bottom: 5px;">
                        <b>type: </b>
                        <span>Observation</span>
                     </p>
                     <p style="margin-bottom: 5px;">
                        <b>code filter:</b>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>path: </b>
                           <span>code</span>
                        </span>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>valueset: </b>
                           <span>Opioid Drug Screening</span>
                        </span>
                     </p>
                  </div>
               </td>
            </tr>
            <tr style="vertical-align: top;">
               <td style="padding-left: 25px; padding-right: 25px;">
                  <div>
                     <p style="margin-bottom: 5px;">
                        <b>type: </b>
                        <span>Observation</span>
                     </p>
                     <p style="margin-bottom: 5px;">
                        <b>code filter:</b>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>path: </b>
                           <span>component-code</span>
                        </span>
                        <br/>
                        <span style="padding-left: 25px;">
                           <b>valueset: </b>
                           <span>Opioid Drug Screening</span>
                        </span>
                     </p>
                  </div>
               </td>
            </tr>
            <!-- Filter down to human readable content -->
            <tr style="vertical-align: top;">
               <th scope="row">
                  <b>Content: </b>
               </th>
               <td style="padding-left: 25px; padding-right: 25px;">
                  <b>type: </b>
                  <span>text/cql</span>
               </td>
            </tr>
            <tr>
               <td colspan="2" style="padding-left: 25px; padding-right: 25px;">
                  <pre><code class="language-cql">library opioidcds_stu3_rec_10_patient_view version &apos;0.1.0&apos;

using FHIR version &apos;3.0.0&apos;

include FHIRHelpers version &apos;3.0.0&apos; called FHIRHelpers
include OpioidCDS_STU3_Common version &apos;0.1.0&apos; called Common

codesystem &quot;V2 Interpretation Codes&quot;: &apos;http://hl7.org/fhir/v2/0078&apos;

// Urine drug screening (procedure) {310627008 , SNOMED-CT }
code &quot;Urine Drug Screening&quot;: &apos;310627008&apos; from Common.SNOMED display &apos;Urine drug screening (procedure)&apos;

/*
** Recommendation #10
** Consider urine drug testing before starting opioid therapy and consider urine
** drug testing at least annually to assess for prescribed medications as well
** as other controlled prescription drugs and illicit drugs
*/

/*
  Trigger context:
    Primary care/ambulatory care
  Trigger event:
    Patient chart is opened
  Assumptions:
    Count only ambulatory prescriptions
  Inclusion criteria:
    Opioid Rx for at least 80 of the past 90 days
      AND
        (No Urine Screening in last 12 months
          OR Evidence of Opioids present
          OR Evidence of Illicit drugs present)
  Exclusion criteria (optional):
    Meds indicating end of life
    Conditions indicating end of life
  Notification:
    No Urine Screening in last 12 months - Patients on opioid therapy should have a urine drug test performed every 12 months.
    Evidence of Opioids - Opioid x present in urine screening
    Evidence of Illicit Drugs - Illicit drug x present in urine screening
    Ref: CDC Recommendation #10.
  EHR expectations:
    Have availability to snooze for 3 months

  Plan Definition:
	http://build.fhir.org/ig/cqframework/opioid-cds/PlanDefinition-opioidcds-10.html
*/

code &quot;Positive&quot;: &apos;POS&apos; from &quot;V2 Interpretation Codes&quot;

context Patient

define &quot;Lookback Year&quot;:
  Interval[Today() - 12 months - 1 days, Today() - 1 day]

define &quot;Patient on Opioids with Abuse Potential&quot;:
  exists (
    Common.&quot;Active Ambulatory Opioid Rx&quot; ActiveOpioidScript
      where not (ActiveOpioidScript.medication in Common.&quot;End Of Life Opioids&quot;)
  )

define &quot;Inclusion Criteria&quot;:
  AgeInYears() &gt;= 18
    and &quot;Patient on Opioids with Abuse Potential&quot;
    and AnyTrue(Common.ProbableDaysInRange(Common.&quot;Active Ambulatory Opioid Rx&quot;, 90, 80))
    and
      (&quot;No Urine Screening In Last 12 Months&quot;
        or &quot;Has Evidence of Opioids&quot;
        or &quot;Has Evidence of Illicit Drugs&quot;)

define &quot;Illicit Drug Urine Screenings in Last 12 Months&quot;:
  (
    (
      [Observation: &quot;code&quot; in Common.&quot;Illicit Drug Screening&quot;] observation
        where date from observation.effective.value in day of &quot;Lookback Year&quot;
    )
    union (
      [Observation: &quot;component-code&quot; in Common.&quot;Illicit Drug Screening&quot;] observation
        where date from observation.effective.value in day of &quot;Lookback Year&quot;
    )
  ) obs
    sort by effective.value

define &quot;Opioid Drug Urine Screenings in Last 12 Months&quot;:
  (
    ([Observation: &quot;code&quot; in Common.&quot;Opioid Drug Screening&quot;] observation
      where date from observation.effective.value in day of &quot;Lookback Year&quot;
    )
    union (
      [Observation: &quot;component-code&quot; in Common.&quot;Opioid Drug Screening&quot;] observation
        where date from observation.effective.value in day of &quot;Lookback Year&quot;
    )
  ) obs
    sort by effective.value

define &quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot;:
  Last( &quot;Illicit Drug Urine Screenings in Last 12 Months&quot; )

define &quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot;:
  Last( &quot;Opioid Drug Urine Screenings in Last 12 Months&quot; )

define &quot;No Urine Screening In Last 12 Months&quot;:
  &quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot; is null
    and &quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot; is null

define &quot;Positive Illicit Drug Screening&quot;:
  &quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months&quot; mostRecentScreening
    where FHIRHelpers.ToConcept(mostRecentScreening.interpretation) ~ &quot;Positive&quot;
      or
      (
          if mostRecentScreening.component is not null and exists(mostRecentScreening.component)
            then
              exists (mostRecentScreening.component c
                where c.interpretation is not null and
                  FHIRHelpers.ToConcept(c.interpretation) ~ &quot;Positive&quot;)
            else false
      )

define &quot;Positive Illicit Drug Screening Qualifying Codes&quot;:
  &quot;Positive Illicit Drug Screening&quot; positiveScreening
    return
    (
      (
          if (FHIRHelpers.ToConcept(positiveScreening.interpretation) ~ &quot;Positive&quot;)
          then positiveScreening.code
          else {}
      )
      union
      (
        if positiveScreening.component is not null
          and exists(positiveScreening.component)
          and FHIRHelpers.ToConcept(positiveScreening.component.interpretation) ~ &quot;Positive&quot;
          then positiveScreening.component.code
        else {}
      )
    )

define &quot;Has Evidence of Illicit Drugs&quot;:
  &quot;Positive Illicit Drug Screening&quot; is not null

define &quot;Positive Opioid Drug Screening&quot;:
  &quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months&quot; mostRecentScreening
  where FHIRHelpers.ToConcept(mostRecentScreening.interpretation) ~ &quot;Positive&quot;
    or
    (
        if mostRecentScreening.component is not null and exists(mostRecentScreening.component)
          then
            exists (mostRecentScreening.component c
              where c.interpretation is not null and
                FHIRHelpers.ToConcept(c.interpretation) ~ &quot;Positive&quot;)
          else false
    )

define &quot;Positive Opioid Drug Screening Qualifying Codes&quot;:
  &quot;Positive Opioid Drug Screening&quot; positiveScreening
  return
  (
    (
        if (FHIRHelpers.ToConcept(positiveScreening.interpretation) ~ &quot;Positive&quot;)
        then positiveScreening.code
        else{}
    )
    union
    (
      if positiveScreening.component is not null
        and exists(positiveScreening.component)
        and FHIRHelpers.ToConcept(positiveScreening.component.interpretation) ~ &quot;Positive&quot;
        then positiveScreening.component.code
      else {}
    )
  )

define &quot;Has Evidence of Opioids&quot;:
  &quot;Positive Opioid Drug Screening&quot; is not null

define &quot;No Screening In Last 12 Months Indicator&quot;:
  if &quot;Inclusion Criteria&quot;
    then &apos;warning&apos;
  else null

define &quot;Evidence of Opioids Indicator&quot;:
  if &quot;Inclusion Criteria&quot;
    then &apos;warning&apos;
  else null

define &quot;Evidence of Illicit Drugs Indicator&quot;:
  if &quot;Inclusion Criteria&quot;
    then &apos;warning&apos;
  else null

define &quot;No Screening In Last 12 Months Summary&quot;:
  if &quot;Inclusion Criteria&quot; and &quot;No Urine Screening In Last 12 Months&quot;
    then &apos;Annual Urine Screening Check&apos;
  else null

define &quot;Evidence of Opioids Summary&quot;:
  if &quot;Inclusion Criteria&quot; and &quot;Has Evidence of Opioids&quot;
    then &apos;Opioids Found In Urine Screening&apos;
  else null

define &quot;Evidence of Illicit Drugs Summary&quot;:
  if &quot;Inclusion Criteria&quot; and &quot;Has Evidence of Illicit Drugs&quot;
    then &apos;Illicit Drugs Found In Urine Screening&apos;
  else null

define &quot;No Screening In Last 12 Months Detail&quot;:
  if &quot;Inclusion Criteria&quot; and &quot;No Urine Screening In Last 12 Months&quot;
    then &apos;Patients on opioid therapy should have a urine drug test performed every 12 months.&apos;
  else null

define &quot;Evidence of Opioids Detail&quot;:
  if &quot;Inclusion Criteria&quot; and &quot;Has Evidence of Opioids&quot;
    then
      &apos;Found the following opioid(s): &apos; +
      Combine(Common.CodeableConceptToString(&quot;Positive Opioid Drug Screening Qualifying Codes&quot;), &apos;, &apos;)
  else null

define &quot;Evidence of Illicit Drugs Detail&quot;:
  &quot;Positive Illicit Drug Screening Qualifying Codes&quot; positiveScreening
    return
      if (&quot;Inclusion Criteria&quot; and &quot;Has Evidence of Illicit Drugs&quot;)
        then
          &apos;Found the following illicit drug(s) in urine drug screen: &apos; +
          (
            Combine(Common.CodeableConceptToString(positiveScreening), &apos;, &apos;)
          )
      else null

/*
PlanDefinition:
  Inclusion Criteria:
    No Screening in Last 12 months - ServiceRequest - Urine Screening
    Opioids found in urine screening
    Illicit drugs found in urine screening
*/

// Procedure Request - Urine Screening
// Detected Issue - Opioids found in urine screening
// Detected Issue - Illicit drugs found in urine screening

define &quot;Urine Drug Screening Request&quot;:
  ProcedureRequest {
    //identifier:,
    definition: { FHIR.Reference { reference: FHIR.string { value: &apos;http://fhir.org/guides/cdc/activitydefinition/urine-screening-request&apos; } } },
    status: FHIR.RequestStatus { value: &apos;draft&apos; },
    intent: FHIR.RequestIntent { value: &apos;proposal&apos; },
    priority: FHIR.RequestPriority { value: &apos;routine&apos; },
    code: FHIR.CodeableConcept { coding: { ToCoding(&quot;Urine Drug Screening&quot;) } },
    subject: FHIR.Reference { reference: FHIR.string { value: &apos;Patient/&apos; + Patient.id } },
    occurrence: FHIR.Period { start: FHIR.dateTime { value: Today() }, end: FHIR.dateTime { value: Today() + 7 days } },
    authoredOn: FHIR.dateTime { value: Now() },
    reasonCode: { FHIR.CodeableConcept { text: FHIR.string { value: &quot;No Screening In Last 12 Months Detail&quot; } } }
    // doesn&apos;t really work, need a relatedArtifact here...
    //reasonCode: { FHIR.CodeableConcept { text: FHIR.string { value: &apos;https://www.cdc.gov/mmwr/volumes/65/rr/rr6501e1.htm#10_When_prescribing_opioids&apos; } } }
  }

define &quot;Opioids Issue&quot;:
  DetectedIssue {
    //identifier:,
    status: FHIR.ObservationStatus { value: &apos;preliminary&apos; },
    category: FHIR.CodeableConcept { text: FHIR.string { value: &quot;Evidence of Opioids Summary&quot; } },
    severity: FHIR.DetectedIssueSeverity { value: &apos;moderate&apos; },
    patient: FHIR.Reference { reference: FHIR.string { value: &apos;Patient/&apos; + Patient.id } },
    date: FHIR.dateTime { value: Now() },
    // TODO: Device representation...
    // author:,
    // TODO: Reference the lab results that were used to infer this
    // implicated:,
    detail: FHIR.string { value: &quot;Evidence of Opioids Detail&quot; },
    reference: FHIR.uri { value: &apos;http://fhir.org/guides/cdc/opioid-cds/PlanDefinition/opioidcds-10-patient-view&apos;}
  }

define &quot;Illicit Drugs Issue&quot;:
  DetectedIssue {
    //identifier:,
    status: FHIR.ObservationStatus { value: &apos;preliminary&apos; },
    category: FHIR.CodeableConcept { text: FHIR.string { value: &quot;Evidence of Illicit Drugs Summary&quot; } },
    severity: FHIR.DetectedIssueSeverity { value: &apos;moderate&apos; },
    patient: FHIR.Reference { reference: FHIR.string { value: &apos;Patient/&apos; + Patient.id } },
    date: FHIR.dateTime { value: Now() },
    // TODO: Device representation...
    // author:,
    // TODO: Reference the lab results that were used to infer this
    // implicated:,
    detail: FHIR.string { value: &quot;Evidence of Illicit Drugs Detail&quot; },
    reference: FHIR.uri { value: &apos;http://fhir.org/guides/cdc/opioid-cds/PlanDefinition/opioidcds-10-patient-view&apos;}
  }

define function ToCoding(code System.Code):
  FHIR.Coding {
    code: FHIR.code { value: code.code },
    system: FHIR.uri { value: code.system },
    version: FHIR.string { value: code.version },
    display: FHIR.string { value: code.display }
  }
</code>
                        </pre>
                    </td>
                </tr>
            </table>
        </div>
    </text>
    <url value="http://fhir.org/guides/cdc/opioid-cds/Library/library-opioidcds-stu3-rec-10-patient-view-0-1-0"/>
    <version value="0.1.0"/>
    <name value="OpioidCDS_STU3_REC_10_Patient_View"/>
    <title value="Library - Opioid CDS Logic for recommendation #10 (patient-view)"/>
    <status value="active"/>
    <experimental value="false"/>
    <type>
        <coding>
            <system value="http://hl7.org/fhir/library-type"/>
            <code value="logic-library"/>
            <display value="Logic Library"/>
        </coding>
    </type>
    <date value="2018-04-15T13:49:09-06:00"/>
    <publisher value="Centers for Disease Control and Prevention (CDC)"/>
    <description value="Opioid decision support logic to evaluate whether the patient has had a urine screening in the past 12 months and provide analysis."/>
    <purpose value="The purpose of this library is to determine whether the patient has had a urine screening in the past 12 months. Is so, then check the results for missing opioids that are prescribed, present opioids that aren't prescribed or present illicit drugs."/>
    <usage value="This library is used to notify the prescriber/user whether the patient has had a urine screening in the past 12 months and to provide analysis if true."/>
    <useContext>
        <code>
            <system value="http://hl7.org/fhir/usage-context-type"/>
            <code value="focus"/>
            <display value="Clinical Focus"/>
        </code>
        <valueCodeableConcept>
            <coding>
                <system value="http://snomed.info/sct"/>
                <code value="182888003"/>
                <display value="Medication requested (situation)"/>
            </coding>
        </valueCodeableConcept>
    </useContext>
    <useContext>
        <code>
            <system value="http://hl7.org/fhir/usage-context-type"/>
            <code value="focus"/>
            <display value="Clinical Focus"/>
        </code>
        <valueCodeableConcept>
            <coding>
                <system value="http://snomed.info/sct"/>
                <code value="82423001"/>
                <display value="Chronic pain (finding)"/>
            </coding>
        </valueCodeableConcept>
    </useContext>
    <jurisdiction>
        <coding>
            <system value="urn:iso:std:iso:3166"/>
            <code value="US"/>
            <display value="United States of America"/>
        </coding>
    </jurisdiction>
    <topic>
        <text value="Opioid Prescribing"/>
    </topic>
    <contributor>
        <type value="author"/>
        <name value="Kensaku Kawamoto, MD, PhD, MHS"/>
    </contributor>
    <contributor>
        <type value="author"/>
        <name value="Bryn Rhodes"/>
    </contributor>
    <contributor>
        <type value="author"/>
        <name value="Floyd Eisenberg, MD, MPH"/>
    </contributor>
    <contributor>
        <type value="author"/>
        <name value="Robert McClure, MD, MPH"/>
    </contributor>
    <copyright value="© CDC 2016+."/>
    <relatedArtifact>
        <type value="documentation"/>
        <display value="CDC guideline for prescribing opioids for chronic pain"/>
        <url value="https://www.cdc.gov/mmwr/volumes/65/rr/rr6501e1.htm?CDC_AA_refVal=https%3A%2F%2Fwww.cdc.gov%2Fmmwr%2Fvolumes%2F65%2Frr%2Frr6501e1er.htm"/>
    </relatedArtifact>
    <relatedArtifact>
      <type value="depends-on"/>
      <resource>
         <reference value="Library/library-fhirhelpers-3-0-0"/>
      </resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"/>
      <resource>
         <reference value="Library/library-opioidcds-stu3-common-0-1-0"/>
      </resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"/>
      <url value="urn:hl7-org:elm-types:r1"/>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"/>
      <url value="http://hl7.org/fhir|3.0.0"/>
   </relatedArtifact>
   <dataRequirement>
      <type value="Observation"/>
      <codeFilter>
         <path value="code"/>
         <valueSetString value="Illicit Drug Screening"/>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"/>
      <codeFilter>
         <path value="component-code"/>
         <valueSetString value="Illicit Drug Screening"/>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"/>
      <codeFilter>
         <path value="code"/>
         <valueSetString value="Opioid Drug Screening"/>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"/>
      <codeFilter>
         <path value="component-code"/>
         <valueSetString value="Opioid Drug Screening"/>
      </codeFilter>
   </dataRequirement>
   <content>
      <contentType value="text/cql"/>
      <data value=""/>
   </content>
   <content>
      <contentType value="application/elm+xml"/>
      <data value=""/>
   </content>
</Library>
